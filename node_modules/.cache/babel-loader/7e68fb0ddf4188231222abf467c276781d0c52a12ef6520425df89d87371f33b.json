{"ast":null,"code":"import React from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const TaskRow=_ref=>{let{task,index,onCheckboxChange,onDelete}=_ref;const priorityColors={High:'bg-danger text-white',Medium:'bg-warning text-dark',Low:'bg-success text-white'};return/*#__PURE__*/_jsxs(\"tr\",{className:\"task-row\",children:[/*#__PURE__*/_jsx(\"th\",{scope:\"row\",children:index+1}),/*#__PURE__*/_jsx(\"td\",{children:task.text}),/*#__PURE__*/_jsx(\"td\",{children:new Date(task.date).toLocaleString()}),/*#__PURE__*/_jsx(\"td\",{children:task.dueDate?new Date(task.dueDate).toLocaleDateString():\"N/A\"}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"span\",{className:`badge ${priorityColors[task.priority]}`,children:task.priority})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:task.completed,onChange:()=>onCheckboxChange(task.id),\"aria-label\":`Mark task ${task.text} as ${task.completed?'incomplete':'complete'}`// Accessibility\n}),task.completed?\"Completed\":\"In Progress\"]})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-danger btn-sm\",onClick:()=>onDelete(task.id),\"aria-label\":`Delete task ${task.text}`// Accessibility\n,children:\"Delete\"})})]});};// Adding PropTypes for validation\nexport default TaskRow;","map":{"version":3,"names":["React","jsx","_jsx","jsxs","_jsxs","TaskRow","_ref","task","index","onCheckboxChange","onDelete","priorityColors","High","Medium","Low","className","children","scope","text","Date","date","toLocaleString","dueDate","toLocaleDateString","priority","type","checked","completed","onChange","id","onClick"],"sources":["C:/Users/admin/Desktop/NodeJS/TaskNest/TaskNest/src/components/TaskRow/TaskRow.jsx"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TaskRow = ({ task, index, onCheckboxChange, onDelete }) => {\r\n  const priorityColors = {\r\n    High: 'bg-danger text-white',\r\n    Medium: 'bg-warning text-dark',\r\n    Low: 'bg-success text-white'\r\n  };\r\n\r\n  return (\r\n    <tr className=\"task-row\">\r\n      <th scope=\"row\">{index + 1}</th>\r\n      <td>{task.text}</td>\r\n      <td>{new Date(task.date).toLocaleString()}</td>\r\n      <td>{task.dueDate ? new Date(task.dueDate).toLocaleDateString() : \"N/A\"}</td>\r\n      <td>\r\n        <span className={`badge ${priorityColors[task.priority]}`}>\r\n          {task.priority}\r\n        </span>\r\n      </td>\r\n      <td>\r\n        <label>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={task.completed}\r\n            onChange={() => onCheckboxChange(task.id)}\r\n            aria-label={`Mark task ${task.text} as ${task.completed ? 'incomplete' : 'complete'}`} // Accessibility\r\n          />\r\n          {task.completed ? \"Completed\" : \"In Progress\"}\r\n        </label>\r\n      </td>\r\n      <td>\r\n        <button\r\n          className=\"btn btn-danger btn-sm\"\r\n          onClick={() => onDelete(task.id)}\r\n          aria-label={`Delete task ${task.text}`} // Accessibility\r\n        >\r\n          Delete\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\n// Adding PropTypes for validation\r\nTaskRow.propTypes = {\r\n  task: PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    text: PropTypes.string.isRequired,\r\n    date: PropTypes.string.isRequired,\r\n    dueDate: PropTypes.string,\r\n    priority: PropTypes.oneOf(['High', 'Medium', 'Low']).isRequired,\r\n    completed: PropTypes.bool.isRequired,\r\n  }).isRequired,\r\n  index: PropTypes.number.isRequired,\r\n  onCheckboxChange: PropTypes.func.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default TaskRow;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAG1B,KAAM,CAAAC,OAAO,CAAGC,IAAA,EAAiD,IAAhD,CAAEC,IAAI,CAAEC,KAAK,CAAEC,gBAAgB,CAAEC,QAAS,CAAC,CAAAJ,IAAA,CAC1D,KAAM,CAAAK,cAAc,CAAG,CACrBC,IAAI,CAAE,sBAAsB,CAC5BC,MAAM,CAAE,sBAAsB,CAC9BC,GAAG,CAAE,uBACP,CAAC,CAED,mBACEV,KAAA,OAAIW,SAAS,CAAC,UAAU,CAAAC,QAAA,eACtBd,IAAA,OAAIe,KAAK,CAAC,KAAK,CAAAD,QAAA,CAAER,KAAK,CAAG,CAAC,CAAK,CAAC,cAChCN,IAAA,OAAAc,QAAA,CAAKT,IAAI,CAACW,IAAI,CAAK,CAAC,cACpBhB,IAAA,OAAAc,QAAA,CAAK,GAAI,CAAAG,IAAI,CAACZ,IAAI,CAACa,IAAI,CAAC,CAACC,cAAc,CAAC,CAAC,CAAK,CAAC,cAC/CnB,IAAA,OAAAc,QAAA,CAAKT,IAAI,CAACe,OAAO,CAAG,GAAI,CAAAH,IAAI,CAACZ,IAAI,CAACe,OAAO,CAAC,CAACC,kBAAkB,CAAC,CAAC,CAAG,KAAK,CAAK,CAAC,cAC7ErB,IAAA,OAAAc,QAAA,cACEd,IAAA,SAAMa,SAAS,CAAE,SAASJ,cAAc,CAACJ,IAAI,CAACiB,QAAQ,CAAC,EAAG,CAAAR,QAAA,CACvDT,IAAI,CAACiB,QAAQ,CACV,CAAC,CACL,CAAC,cACLtB,IAAA,OAAAc,QAAA,cACEZ,KAAA,UAAAY,QAAA,eACEd,IAAA,UACEuB,IAAI,CAAC,UAAU,CACfC,OAAO,CAAEnB,IAAI,CAACoB,SAAU,CACxBC,QAAQ,CAAEA,CAAA,GAAMnB,gBAAgB,CAACF,IAAI,CAACsB,EAAE,CAAE,CAC1C,aAAY,aAAatB,IAAI,CAACW,IAAI,OAAOX,IAAI,CAACoB,SAAS,CAAG,YAAY,CAAG,UAAU,EAAI;AAAA,CACxF,CAAC,CACDpB,IAAI,CAACoB,SAAS,CAAG,WAAW,CAAG,aAAa,EACxC,CAAC,CACN,CAAC,cACLzB,IAAA,OAAAc,QAAA,cACEd,IAAA,WACEa,SAAS,CAAC,uBAAuB,CACjCe,OAAO,CAAEA,CAAA,GAAMpB,QAAQ,CAACH,IAAI,CAACsB,EAAE,CAAE,CACjC,aAAY,eAAetB,IAAI,CAACW,IAAI,EAAI;AAAA,CAAAF,QAAA,CACzC,QAED,CAAQ,CAAC,CACP,CAAC,EACH,CAAC,CAET,CAAC,CAED;AAeA,cAAe,CAAAX,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}