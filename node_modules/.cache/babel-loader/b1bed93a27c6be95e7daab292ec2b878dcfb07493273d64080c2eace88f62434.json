{"ast":null,"code":"import'./App.css';import'bootstrap/dist/css/bootstrap.min.css';import React,{useState,useEffect}from\"react\";import TodoForm from'./components/TodoForm/TodoForm';import TodoList from'./components/TodoList/TodoList';import ContactCard from'./components/ContactCard/ContactCard';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function App(){const[tasks,setTasks]=useState(()=>{// Load tasks from localStorage on first render\nconst savedTasks=JSON.parse(localStorage.getItem(\"tasks\"));return savedTasks||[];});const[userName,setUserName]=useState(()=>{// Load user name from sessionStorage on first render\nreturn sessionStorage.getItem(\"userName\")||\"My To-Do List\";});const[isEditingName,setIsEditingName]=useState(false);// Save tasks to localStorage whenever tasks array changes\nuseEffect(()=>{if(tasks.length>0){localStorage.setItem(\"tasks\",JSON.stringify(tasks));}},[tasks]);// Save user name to sessionStorage whenever it changes\nuseEffect(()=>{sessionStorage.setItem(\"userName\",userName);},[userName]);const addTask=(taskText,taskCategory,priority,dueDate)=>{const newTask={id:Date.now(),text:taskText,date:new Date().toISOString(),category:taskCategory,priority,dueDate,completed:false};setTasks([newTask,...tasks]);};const handleCheckboxChange=taskId=>{const updatedTasks=tasks.map(task=>{if(task.id===taskId){task.completed=!task.completed;}return task;});setTasks(updatedTasks);};const handleDelete=taskId=>{const updatedTasks=tasks.filter(task=>task.id!==taskId);setTasks(updatedTasks);};// Check for tasks with approaching due dates\nuseEffect(()=>{const checkReminders=()=>{const now=new Date();tasks.forEach(task=>{if(task.dueDate&&!task.completed){const dueDate=new Date(task.dueDate);const timeDifference=dueDate-now;const hoursLeft=Math.floor(timeDifference/(1000*60*60));if(hoursLeft<24&&hoursLeft>0){alert(`Reminder: Task \"${task.text}\" is due in ${hoursLeft} hours.`);}}});};const intervalId=setInterval(checkReminders,60*60*1000);// Check every hour\nreturn()=>clearInterval(intervalId);},[tasks]);return/*#__PURE__*/_jsxs(\"div\",{className:\"container mt-5\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"d-flex justify-content-between align-items-center mb-4\",children:isEditingName?/*#__PURE__*/_jsxs(\"form\",{onSubmit:e=>{e.preventDefault();setIsEditingName(false);},className:\"d-flex\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-control\",value:userName,onChange:e=>setUserName(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary ms-2\",type:\"submit\",children:\"Save\"})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h4\",{children:userName}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-secondary\",onClick:()=>setIsEditingName(true),children:\"Edit Name\"})]})}),/*#__PURE__*/_jsx(TodoForm,{addTask:addTask}),/*#__PURE__*/_jsx(TodoList,{tasks:tasks,onCheckboxChange:handleCheckboxChange,onDelete:handleDelete}),/*#__PURE__*/_jsx(ContactCard,{})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","TodoForm","TodoList","ContactCard","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","App","tasks","setTasks","savedTasks","JSON","parse","localStorage","getItem","userName","setUserName","sessionStorage","isEditingName","setIsEditingName","length","setItem","stringify","addTask","taskText","taskCategory","priority","dueDate","newTask","id","Date","now","text","date","toISOString","category","completed","handleCheckboxChange","taskId","updatedTasks","map","task","handleDelete","filter","checkReminders","forEach","timeDifference","hoursLeft","Math","floor","alert","intervalId","setInterval","clearInterval","className","children","onSubmit","e","preventDefault","type","value","onChange","target","onClick","onCheckboxChange","onDelete"],"sources":["C:/Users/admin/Desktop/NodeJS/Dream Todo/src/App.js"],"sourcesContent":["import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useState, useEffect } from \"react\";\nimport TodoForm from './components/TodoForm/TodoForm';\nimport TodoList from './components/TodoList/TodoList';\nimport ContactCard from './components/ContactCard/ContactCard';\n\nfunction App() {\n  const [tasks, setTasks] = useState(() => {\n    // Load tasks from localStorage on first render\n    const savedTasks = JSON.parse(localStorage.getItem(\"tasks\"));\n    return savedTasks || [];\n  });\n  \n  const [userName, setUserName] = useState(() => {\n    // Load user name from sessionStorage on first render\n    return sessionStorage.getItem(\"userName\") || \"My To-Do List\";\n  });\n  \n  const [isEditingName, setIsEditingName] = useState(false);\n\n  // Save tasks to localStorage whenever tasks array changes\n  useEffect(() => {\n    if (tasks.length > 0) {\n      localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n    }\n  }, [tasks]);\n\n  // Save user name to sessionStorage whenever it changes\n  useEffect(() => {\n    sessionStorage.setItem(\"userName\", userName);\n  }, [userName]);\n\n  const addTask = (taskText, taskCategory, priority, dueDate) => {\n    const newTask = {\n      id: Date.now(),\n      text: taskText,\n      date: new Date().toISOString(),\n      category: taskCategory,\n      priority,\n      dueDate,\n      completed: false,\n    };\n    setTasks([newTask, ...tasks]);\n  };\n\n  const handleCheckboxChange = (taskId) => {\n    const updatedTasks = tasks.map((task) => {\n      if (task.id === taskId) {\n        task.completed = !task.completed;\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  };\n\n  const handleDelete = (taskId) => {\n    const updatedTasks = tasks.filter((task) => task.id !== taskId);\n    setTasks(updatedTasks);\n  };\n\n  // Check for tasks with approaching due dates\n  useEffect(() => {\n    const checkReminders = () => {\n      const now = new Date();\n      tasks.forEach((task) => {\n        if (task.dueDate && !task.completed) {\n          const dueDate = new Date(task.dueDate);\n          const timeDifference = dueDate - now;\n          const hoursLeft = Math.floor(timeDifference / (1000 * 60 * 60));\n          if (hoursLeft < 24 && hoursLeft > 0) {\n            alert(`Reminder: Task \"${task.text}\" is due in ${hoursLeft} hours.`);\n          }\n        }\n      });\n    };\n    const intervalId = setInterval(checkReminders, 60 * 60 * 1000); // Check every hour\n    return () => clearInterval(intervalId);\n  }, [tasks]);\n\n  return (\n    <div className=\"container mt-5\">\n      <div className=\"d-flex justify-content-between align-items-center mb-4\">\n        {isEditingName ? (\n          <form onSubmit={(e) => { e.preventDefault(); setIsEditingName(false); }} className=\"d-flex\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={userName}\n              onChange={(e) => setUserName(e.target.value)}\n            />\n            <button className=\"btn btn-primary ms-2\" type=\"submit\">Save</button>\n          </form>\n        ) : (\n          <>\n            <h4>{userName}</h4>\n            <button className=\"btn btn-secondary\" onClick={() => setIsEditingName(true)}>Edit Name</button>\n          </>\n        )}\n      </div>\n      <TodoForm addTask={addTask} />\n      <TodoList tasks={tasks} onCheckboxChange={handleCheckboxChange} onDelete={handleDelete} />\n      <ContactCard />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}