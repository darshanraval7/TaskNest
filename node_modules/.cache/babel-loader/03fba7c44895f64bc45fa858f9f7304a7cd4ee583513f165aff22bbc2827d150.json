{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\NodeJS\\\\TaskNest\\\\TaskNest\\\\src\\\\components\\\\TaskRow\\\\TaskRow.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskRow = ({\n  task,\n  index,\n  onCheckboxChange,\n  onDelete\n}) => {\n  const priorityColors = {\n    High: 'bg-danger text-white',\n    Medium: 'bg-warning text-dark',\n    Low: 'bg-success text-white'\n  };\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    className: \"task-row\",\n    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n      scope: \"row\",\n      children: index + 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: task.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: new Date(task.date).toLocaleString()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: task.dueDate ? new Date(task.dueDate).toLocaleDateString() : \"N/A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `badge ${priorityColors[task.priority]}`,\n        children: task.priority\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: task.completed,\n          onChange: () => onCheckboxChange(task.id),\n          \"aria-label\": `Mark task ${task.text} as ${task.completed ? 'incomplete' : 'complete'}` // Accessibility\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), task.completed ? \"Completed\" : \"In Progress\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-danger btn-sm\",\n        onClick: () => onDelete(task.id),\n        \"aria-label\": `Delete task ${task.text}` // Accessibility\n        ,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n// Adding PropTypes for validation\n_c = TaskRow;\nTaskRow.propTypes = {\n  task: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    text: PropTypes.string.isRequired,\n    date: PropTypes.string.isRequired,\n    dueDate: PropTypes.string,\n    priority: PropTypes.oneOf(['High', 'Medium', 'Low']).isRequired,\n    completed: PropTypes.bool.isRequired\n  }).isRequired,\n  index: PropTypes.number.isRequired,\n  onCheckboxChange: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired\n};\nexport default TaskRow;\nvar _c;\n$RefreshReg$(_c, \"TaskRow\");","map":{"version":3,"names":["React","PropTypes","jsxDEV","_jsxDEV","TaskRow","task","index","onCheckboxChange","onDelete","priorityColors","High","Medium","Low","className","children","scope","fileName","_jsxFileName","lineNumber","columnNumber","text","Date","date","toLocaleString","dueDate","toLocaleDateString","priority","type","checked","completed","onChange","id","onClick","_c","propTypes","shape","number","isRequired","string","oneOf","bool","func","$RefreshReg$"],"sources":["C:/Users/admin/Desktop/NodeJS/TaskNest/TaskNest/src/components/TaskRow/TaskRow.jsx"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TaskRow = ({ task, index, onCheckboxChange, onDelete }) => {\r\n  const priorityColors = {\r\n    High: 'bg-danger text-white',\r\n    Medium: 'bg-warning text-dark',\r\n    Low: 'bg-success text-white'\r\n  };\r\n\r\n  return (\r\n    <tr className=\"task-row\">\r\n      <th scope=\"row\">{index + 1}</th>\r\n      <td>{task.text}</td>\r\n      <td>{new Date(task.date).toLocaleString()}</td>\r\n      <td>{task.dueDate ? new Date(task.dueDate).toLocaleDateString() : \"N/A\"}</td>\r\n      <td>\r\n        <span className={`badge ${priorityColors[task.priority]}`}>\r\n          {task.priority}\r\n        </span>\r\n      </td>\r\n      <td>\r\n        <label>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={task.completed}\r\n            onChange={() => onCheckboxChange(task.id)}\r\n            aria-label={`Mark task ${task.text} as ${task.completed ? 'incomplete' : 'complete'}`} // Accessibility\r\n          />\r\n          {task.completed ? \"Completed\" : \"In Progress\"}\r\n        </label>\r\n      </td>\r\n      <td>\r\n        <button\r\n          className=\"btn btn-danger btn-sm\"\r\n          onClick={() => onDelete(task.id)}\r\n          aria-label={`Delete task ${task.text}`} // Accessibility\r\n        >\r\n          Delete\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\n// Adding PropTypes for validation\r\nTaskRow.propTypes = {\r\n  task: PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    text: PropTypes.string.isRequired,\r\n    date: PropTypes.string.isRequired,\r\n    dueDate: PropTypes.string,\r\n    priority: PropTypes.oneOf(['High', 'Medium', 'Low']).isRequired,\r\n    completed: PropTypes.bool.isRequired,\r\n  }).isRequired,\r\n  index: PropTypes.number.isRequired,\r\n  onCheckboxChange: PropTypes.func.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default TaskRow;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}